#!/usr/bin/env python3
"""
Main entry point for gutAutomate

Usage:
    gut-automate                    # Interactive mode with approvals
    gut-automate --batch            # Non-interactive batch mode
    gut-automate --claude           # Claude mode (creates tasks via MCP)
    gut-automate --batch --claude   # Batch mode with Claude
"""

import sys
import os

# Add parent directory to path so we can import gut_automate package
sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

import argparse
from gut_automate import core

def main():
    parser = argparse.ArgumentParser(
        description='gutAutomate - Intelligent meeting automation and task creation'
    )
    parser.add_argument(
        '--batch',
        action='store_true',
        help='Run in non-interactive batch mode (auto-approve all)'
    )
    parser.add_argument(
        '--claude',
        action='store_true',
        help='Use Claude mode for task creation via MCP'
    )
    parser.add_argument(
        '--test',
        action='store_true',
        help='Test Google Drive connection'
    )

    args = parser.parse_args()

    # Set environment variables to control behavior
    if args.batch:
        os.environ['BATCH_MODE'] = 'true'

    # Run the appropriate mode
    if args.test:
        core.test_gdrive_connection()
    else:
        mode = 'claude' if args.claude else 'standalone'
        core.main(mode)

if __name__ == '__main__':
    main()
